version: '3.8'

services:
  # Production Flask application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: it-asset-manager-prod
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-key-change-this}
      - DATABASE_URL=${DATABASE_URL:-sqlite:///instance/it_assets.db}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
    volumes:
      # Persist SQLite database
      - sqlite_prod_data:/app/instance
      # Persist logs
      - ./logs:/app/logs
      # Persist uploads
      - ./uploads:/app/uploads
    ports:
      - "8000:8000"
    networks:
      - it-asset-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: it-asset-manager-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/prod.conf:/etc/nginx/conf.d/default.conf
      - ./it_asset_manager/static:/var/www/static:ro
      - ./logs/nginx:/var/log/nginx
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - it-asset-network
    restart: unless-stopped

volumes:
  sqlite_prod_data:
    driver: local

networks:
  it-asset-network:
    driver: bridge
