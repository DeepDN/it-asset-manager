version: '3.8'

services:
  # Development Flask application
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: it-asset-manager-dev
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - SECRET_KEY=dev-secret-key-change-in-production
      - SQLALCHEMY_DATABASE_URI=sqlite:///instance/it_assets.db
    volumes:
      # Mount source code for development
      - .:/app
      # Persist SQLite database
      - sqlite_data:/app/instance
      # Persist logs
      - ./logs:/app/logs
    networks:
      - it-asset-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL database for production-like development
  postgres-dev:
    image: postgres:15-alpine
    container_name: it-asset-manager-postgres-dev
    environment:
      - POSTGRES_DB=it_assets_dev
      - POSTGRES_USER=it_assets_user
      - POSTGRES_PASSWORD=dev_password_123
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - it-asset-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U it_assets_user -d it_assets_dev"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching (optional)
  redis-dev:
    image: redis:7-alpine
    container_name: it-asset-manager-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - it-asset-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy for development
  nginx-dev:
    image: nginx:alpine
    container_name: it-asset-manager-nginx-dev
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/dev.conf:/etc/nginx/conf.d/default.conf
      - ./it_asset_manager/static:/var/www/static
    depends_on:
      - app-dev
    networks:
      - it-asset-network
    restart: unless-stopped

volumes:
  sqlite_data:
    driver: local
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  it-asset-network:
    driver: bridge
